{
  "Sequelize Provider": {
    "prefix": ["ns_sequelize_provider", "Sequelize Provider"],
    "scope": "typescript",
    "description": "Creates a basic Sequelize provider with connection and model registration.",
    "body": ["import { Sequelize } from 'sequelize-typescript';", "", "export const databaseProviders = [", "  {", "    provide: 'SEQUELIZE',", "    useFactory: async () => {", "      const sequelize = new Sequelize({", "        dialect: '${1:dialect}',", "        host: '${2:host}',", "        port: ${3:port},", "        username: '${4:username}',", "        password: '${5:password}',", "        database: '${6:database}',", "      });", "      sequelize.addModels([$0]);", "      await sequelize.sync();", "      return sequelize;", "    },", "  },", "];", ""]
  },
  "Start Sequelize with environment variables": {
    "prefix": ["ns_sequelize_process_env", "Sequelize environment"],
    "scope": "typescript",
    "description": "Starts Sequelize using environment-based configuration (NODE_ENV switch).",
    "body": ["import { Sequelize } from 'sequelize-typescript';", "", "let config;", "", "switch (process.env.NODE_ENV) {", "  case 'prod':", "  case 'production':", "    config = databaseConfig.production;", "  case 'dev':", "  case 'development':", "    config = databaseConfig.development;", "  case 'test':", "    config = databaseConfig.test;", "  default:", "    config = databaseConfig.development;", "}", "", "const sequelize = new Sequelize(config);", ""]
  }
}
